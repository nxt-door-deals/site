{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport authReducer from \"./authReducer\";\nimport AuthContext from \"./authContext\";\nimport setAuthToken from \"../../utils/setToken\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR, CLEAR_ERROR, CLEAR_MESSAGE, LOGOUT, EMAIL_SEND_SUCCESS, EMAIL_SEND_FAILURE, EMAIL_VERIFICATION_SUCCESS, EMAIL_VERIFICATION_FAIL, EMAIL_FOUND, EMAIL_NOT_FOUND, OTP_GENERATED_SUCCESS, OTP_GENERATED_FAILURE, OTP_VALIDATED_SUCCESS, OTP_VALIDATED_FAILURE, PASSWORD_CHANGE_SUCCESS, PASSWORD_CHANGE_FAILURE, EMAIL_VERIFICATION_TIMESTAMP_UPDATED } from \"../Types\";\nvar cookie = new Cookies(); // Will be used in the copyright section in the email footer\n\nvar currentYear = new Date().getFullYear(); // Email sender\n\nvar fromEmail = process.env.FROM_EMAIL;\n\nvar AuthState = function AuthState(props) {\n  var initialState = {\n    token: null,\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    authError: null,\n    emailVerified: null,\n    verificationStatus: null,\n    emailSent: null,\n    otpGenerated: null,\n    otpValidated: null,\n    passwordChanged: null,\n    genericMessage: null\n  };\n\n  var _useReducer = useReducer(authReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Register user\n\n\n  var registerUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, email) {\n      var mobile,\n          password,\n          apartment,\n          jsonPayload,\n          _res,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mobile = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n              password = _args.length > 3 ? _args[3] : undefined;\n              apartment = _args.length > 4 ? _args[4] : undefined;\n              jsonPayload = {\n                name: name,\n                email: email,\n                mobile: mobile,\n                password: password,\n                apartment_id: apartment\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"\".concat(process.env.API_PROXY, \"/register/user\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 7:\n              _res = _context.sent;\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: _res.data\n              });\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              dispatch({\n                type: REGISTER_FAIL,\n                payload: _context.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }));\n\n    return function registerUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Load user\n\n\n  var loadUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _res2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (cookie.get(\"nddToken\")) {\n                setAuthToken(cookie.get(\"nddToken\"));\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(\"\".concat(process.env.API_PROXY, \"/auth/current_user\"));\n\n            case 4:\n              _res2 = _context2.sent;\n              dispatch({\n                type: USER_LOADED,\n                payload: _res2.data\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: AUTH_ERROR,\n                payload: _context2.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function loadUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // User login\n\n\n  var loginUser = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, password) {\n      var formData, _res3;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formData = new FormData();\n              formData.set(\"username\", email);\n              formData.set(\"password\", password);\n              _context3.prev = 3;\n              _context3.next = 6;\n              return axios.post(\"\".concat(process.env.API_PROXY, \"/auth\"), formData, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              });\n\n            case 6:\n              _res3 = _context3.sent;\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: _res3.data\n              });\n              _context3.next = 14;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              dispatch({\n                type: LOGIN_FAIL,\n                payload: _context3.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10]]);\n    }));\n\n    return function loginUser(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Send email - user registration, welcome etc...\n\n\n  var sendEmail = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name, email, verificationUrl) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: email,\n                template_name: \"VERIFY_EMAIL_TEMPLATE\",\n                name: name,\n                verificationurl: verificationUrl,\n                year: currentYear\n              };\n              _context4.prev = 2;\n              _context4.next = 5;\n              return axios.post(\"\".concat(process.env.API_PROXY, \"/email/send\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              dispatch({\n                type: EMAIL_SEND_SUCCESS\n              });\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](2);\n              dispatch({\n                type: EMAIL_SEND_FAILURE\n              });\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 8]]);\n    }));\n\n    return function sendEmail(_x5, _x6, _x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // Refresh the email verification timestamp\n\n\n  var updateEmailVerificationTimestamp = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              jsonPayload = {\n                id: id\n              };\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.put(\"\".concat(process.env.API_PROXY, \"/email_timestamp/refresh\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: null\n              });\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: EMAIL_VERIFICATION_TIMESTAMP_UPDATED,\n                payload: _context5.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 7]]);\n    }));\n\n    return function updateEmailVerificationTimestamp(_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // Email the otp to the user during password change\n\n\n  var sendOtpByEmail = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(email) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: email,\n                template_name: \"OTP_EMAIL_TEMPLATE\",\n                year: currentYear\n              };\n              _context6.prev = 2;\n              _context6.next = 5;\n              return axios.post(\"\".concat(process.env.API_PROXY, \"/email/send/otp\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              dispatch({\n                type: EMAIL_SEND_SUCCESS\n              });\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](2);\n              dispatch({\n                type: EMAIL_SEND_FAILURE\n              });\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[2, 8]]);\n    }));\n\n    return function sendOtpByEmail(_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // Send the contact us email\n\n\n  var sendContactUsEmail = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(email, message) {\n      var emailBody, jsonPayload, _res4;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              emailBody = \"\".concat(email, \" wrote: \\n\\n\").concat(message);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: fromEmail,\n                body: emailBody\n              };\n              _context7.prev = 3;\n              _context7.next = 6;\n              return axios.post(\"\".concat(process.env.API_PROXY, \"/email/send/contact\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 6:\n              _res4 = _context7.sent;\n              dispatch({\n                type: EMAIL_SEND_SUCCESS,\n                payload: _res4.data\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_MESSAGE\n                });\n              }, 5000);\n              _context7.next = 15;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](3);\n              dispatch({\n                type: EMAIL_SEND_FAILURE,\n                payload: res.data\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_MESSAGE\n                });\n              }, 5000);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 11]]);\n    }));\n\n    return function sendContactUsEmail(_x10, _x11) {\n      return _ref7.apply(this, arguments);\n    };\n  }(); // Complete the user's email verification process\n\n\n  var verifyEmail = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(token) {\n      var utcTime, _res5;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              utcTime = new Date().toJSON();\n              _context8.prev = 1;\n              _context8.next = 4;\n              return axios.put(\"\".concat(process.env.API_PROXY, \"/user/emailverification/\").concat(token), {\n                timestamp: utcTime\n              }, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              _res5 = _context8.sent;\n              dispatch({\n                type: EMAIL_VERIFICATION_SUCCESS,\n                payload: _res5.data\n              });\n              _context8.next = 11;\n              break;\n\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](1);\n              dispatch({\n                type: EMAIL_VERIFICATION_FAIL,\n                payload: _context8.t0.response.data.detail\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 8]]);\n    }));\n\n    return function verifyEmail(_x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // Method for forgot password - email validation\n\n\n  var validateEmail = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(email) {\n      var _res6;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return axios.get(\"\".concat(process.env.API_PROXY, \"/user/validate_email/\").concat(email));\n\n            case 3:\n              _res6 = _context9.sent;\n              dispatch({\n                type: EMAIL_FOUND,\n                payload: _res6.data\n              });\n              _context9.next = 11;\n              break;\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              dispatch({\n                type: EMAIL_NOT_FOUND,\n                payload: _context9.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 7]]);\n    }));\n\n    return function validateEmail(_x13) {\n      return _ref9.apply(this, arguments);\n    };\n  }(); // Method for forgot password - otp generation\n\n\n  var generateOtp = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id, email) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              jsonPayload = {\n                id: id,\n                email: email\n              };\n              _context10.prev = 1;\n              _context10.next = 4;\n              return axios.put(\"\".concat(process.env.API_PROXY, \"/user/otp_generation\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: OTP_GENERATED_SUCCESS\n              });\n              _context10.next = 10;\n              break;\n\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](1);\n              dispatch({\n                type: OTP_GENERATED_FAILURE,\n                payload: _context10.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 7]]);\n    }));\n\n    return function generateOtp(_x14, _x15) {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // Method for forgot password - otp generation\n\n\n  var validateOtp = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(id, otp) {\n      var utcTime;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              utcTime = new Date().toJSON();\n              _context11.prev = 1;\n              _context11.next = 4;\n              return axios.get(\"\".concat(process.env.API_PROXY, \"/user/verify_otp/\").concat(id, \"?otp=\").concat(otp, \"&timestamp=\").concat(utcTime));\n\n            case 4:\n              dispatch({\n                type: OTP_VALIDATED_SUCCESS\n              });\n              _context11.next = 11;\n              break;\n\n            case 7:\n              _context11.prev = 7;\n              _context11.t0 = _context11[\"catch\"](1);\n              dispatch({\n                type: OTP_VALIDATED_FAILURE,\n                payload: _context11.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[1, 7]]);\n    }));\n\n    return function validateOtp(_x16, _x17) {\n      return _ref11.apply(this, arguments);\n    };\n  }(); // Method for forgot password - password update\n\n\n  var updatePassword = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(password, userId) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              jsonPayload = {\n                password: password\n              };\n              _context12.prev = 1;\n              _context12.next = 4;\n              return axios.put(\"\".concat(process.env.API_PROXY, \"/user/password/\").concat(userId), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: PASSWORD_CHANGE_SUCCESS\n              });\n              _context12.next = 10;\n              break;\n\n            case 7:\n              _context12.prev = 7;\n              _context12.t0 = _context12[\"catch\"](1);\n              dispatch({\n                type: PASSWORD_CHANGE_FAILURE,\n                payload: _context12.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 7]]);\n    }));\n\n    return function updatePassword(_x18, _x19) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var logout = function logout() {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      authError: state.authError,\n      emailVerified: state.emailVerified,\n      verificationStatus: state.verificationStatus,\n      emailSent: state.emailSent,\n      otpGenerated: state.otpGenerated,\n      otpValidated: state.otpValidated,\n      passwordChanged: state.passwordChanged,\n      genericMessage: state.genericMessage,\n      registerUser: registerUser,\n      loginUser: loginUser,\n      loadUser: loadUser,\n      sendEmail: sendEmail,\n      sendOtpByEmail: sendOtpByEmail,\n      verifyEmail: verifyEmail,\n      validateEmail: validateEmail,\n      updateEmailVerificationTimestamp: updateEmailVerificationTimestamp,\n      sendContactUsEmail: sendContactUsEmail,\n      generateOtp: generateOtp,\n      validateOtp: validateOtp,\n      updatePassword: updatePassword,\n      logout: logout\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":null,"metadata":{},"sourceType":"module"}