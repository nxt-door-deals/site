{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Cookies from \"universal-cookie\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, AUTH_ERROR, USER_LOADED, CLEAR_ERROR, CLEAR_MESSAGE, LOGOUT, EMAIL_SEND_SUCCESS, EMAIL_SEND_FAILURE, EMAIL_VERIFICATION_SUCCESS, EMAIL_VERIFICATION_FAIL, EMAIL_FOUND, EMAIL_NOT_FOUND, OTP_GENERATED_SUCCESS, OTP_GENERATED_FAILURE, OTP_VALIDATED_SUCCESS, OTP_VALIDATED_FAILURE, PASSWORD_CHANGE_SUCCESS, PASSWORD_CHANGE_FAILURE, EMAIL_VERIFICATION_TIMESTAMP_UPDATED } from \"../Types\";\nconst cookie = new Cookies();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      });\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      var d = new Date();\n      d.setMinutes(d.getMinutes() + 1440);\n      cookie.set(\"nddToken\", action.payload.access_token, {\n        path: \"/\",\n        expires: d,\n        sameSite: \"strict\"\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: action.payload.access_token,\n        isAuthenticated: true,\n        loading: false\n      });\n\n    case LOGOUT:\n      cookie.remove(\"nddToken\", {\n        path: \"/\"\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        authError: null\n      });\n\n    case EMAIL_SEND_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailSent: true,\n        genericMessage: action.payload\n      });\n\n    case EMAIL_VERIFICATION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailVerified: true,\n        loading: false,\n        verificationStatus: action.payload\n      });\n\n    case EMAIL_VERIFICATION_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailVerified: false,\n        loading: false,\n        verificationStatus: action.payload\n      });\n\n    case EMAIL_SEND_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailSent: false,\n        genericMessage: action.payload\n      });\n\n    case EMAIL_FOUND:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case EMAIL_NOT_FOUND:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authError: action.payload\n      });\n\n    case OTP_GENERATED_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        otpGenerated: true\n      });\n\n    case OTP_GENERATED_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        otpGenerated: false,\n        authError: action.payload\n      });\n\n    case OTP_VALIDATED_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        otpValidated: true\n      });\n\n    case OTP_VALIDATED_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        otpValidated: false,\n        authError: action.payload\n      });\n\n    case PASSWORD_CHANGE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        passwordChanged: true\n      });\n\n    case PASSWORD_CHANGE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        passwordChanged: false,\n        authError: action.payload\n      });\n\n    case EMAIL_VERIFICATION_TIMESTAMP_UPDATED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        genericMessage: action.payload\n      });\n\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n      cookie.remove(\"nddToken\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        authError: action.payload\n      });\n\n    case CLEAR_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authError: null\n      });\n\n    case CLEAR_MESSAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        genericMessage: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":null,"metadata":{},"sourceType":"module"}