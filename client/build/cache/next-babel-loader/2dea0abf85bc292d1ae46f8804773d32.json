{"ast":null,"code":"var _jsxFileName = \"C:\\\\nxt_door_deals\\\\site\\\\client\\\\context\\\\site\\\\SiteState.jsx\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport siteReducer from \"./siteReducer\";\nimport SiteContext from \"./siteContext\";\nimport axios from \"axios\";\nimport { FETCH_APARTMENT, FETCH_APARTMENT_ERROR, LOADING, CLEAR_APARTMENT_SEARCH_RESULTS } from \"../Types\";\n\nconst SiteState = props => {\n  const initialState = {\n    numApartmentsFetched: \"\",\n    fetchError: null,\n    loading: false,\n    apartmentData: \"\"\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(siteReducer, initialState);\n\n  const fetchApartments = async aptName => {\n    try {\n      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_PROXY}/apartments/search/?name=${aptName}`);\n      dispatch({\n        type: FETCH_APARTMENT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: FETCH_APARTMENT_ERROR,\n        payload: err.response.data.detail\n      });\n    }\n  };\n\n  const clearApartmentSearchResults = () => {\n    dispatch({\n      type: CLEAR_APARTMENT_SEARCH_RESULTS\n    });\n  };\n\n  const setLoading = () => {\n    dispatch({\n      type: LOADING\n    });\n  };\n\n  return __jsx(SiteContext.Provider, {\n    value: {\n      numApartmentsFetched: state.numApartmentsFetched,\n      loading: state.loading,\n      apartmentData: state.apartmentData,\n      fetchError: state.fetchError,\n      fetchApartments,\n      clearApartmentSearchResults,\n      setLoading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default SiteState;","map":{"version":3,"sources":["C:/nxt_door_deals/site/client/context/site/SiteState.jsx"],"names":["React","useReducer","siteReducer","SiteContext","axios","FETCH_APARTMENT","FETCH_APARTMENT_ERROR","LOADING","CLEAR_APARTMENT_SEARCH_RESULTS","SiteState","props","initialState","numApartmentsFetched","fetchError","loading","apartmentData","state","dispatch","fetchApartments","aptName","res","get","process","env","NEXT_PUBLIC_API_PROXY","type","payload","data","err","response","detail","clearApartmentSearchResults","setLoading","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,eADF,EAEEC,qBAFF,EAGEC,OAHF,EAIEC,8BAJF,QAKO,UALP;;AAOA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,oBAAoB,EAAE,EADH;AAEnBC,IAAAA,UAAU,EAAE,IAFO;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,aAAa,EAAE;AAJI,GAArB;AAOA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,UAAU,CAACC,WAAD,EAAcS,YAAd,CAApC;;AAEA,QAAMO,eAAe,GAAG,MAAOC,OAAP,IAAmB;AACzC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACf,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,4BAA2BL,OAAQ,EADxD,CAAlB;AAIAF,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEpB,eAAR;AAAyBqB,QAAAA,OAAO,EAAEN,GAAG,CAACO;AAAtC,OAAD,CAAR;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEnB,qBADC;AAEPoB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFpB,OAAD,CAAR;AAID;AACF,GAbD;;AAeA,QAAMC,2BAA2B,GAAG,MAAM;AACxCd,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMwB,UAAU,GAAG,MAAM;AACvBf,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,oBAAoB,EAAEI,KAAK,CAACJ,oBADvB;AAELE,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFV;AAGLC,MAAAA,aAAa,EAAEC,KAAK,CAACD,aAHhB;AAILF,MAAAA,UAAU,EAAEG,KAAK,CAACH,UAJb;AAKLK,MAAAA,eALK;AAMLa,MAAAA,2BANK;AAOLC,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGtB,KAAK,CAACuB,QAXT,CADF;AAeD,CAhDD;;AAkDA,eAAexB,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport siteReducer from \"./siteReducer\";\r\nimport SiteContext from \"./siteContext\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  FETCH_APARTMENT,\r\n  FETCH_APARTMENT_ERROR,\r\n  LOADING,\r\n  CLEAR_APARTMENT_SEARCH_RESULTS,\r\n} from \"../Types\";\r\n\r\nconst SiteState = (props) => {\r\n  const initialState = {\r\n    numApartmentsFetched: \"\",\r\n    fetchError: null,\r\n    loading: false,\r\n    apartmentData: \"\",\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(siteReducer, initialState);\r\n\r\n  const fetchApartments = async (aptName) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/apartments/search/?name=${aptName}`\r\n      );\r\n\r\n      dispatch({ type: FETCH_APARTMENT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: FETCH_APARTMENT_ERROR,\r\n        payload: err.response.data.detail,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearApartmentSearchResults = () => {\r\n    dispatch({ type: CLEAR_APARTMENT_SEARCH_RESULTS });\r\n  };\r\n\r\n  const setLoading = () => {\r\n    dispatch({ type: LOADING });\r\n  };\r\n\r\n  return (\r\n    <SiteContext.Provider\r\n      value={{\r\n        numApartmentsFetched: state.numApartmentsFetched,\r\n        loading: state.loading,\r\n        apartmentData: state.apartmentData,\r\n        fetchError: state.fetchError,\r\n        fetchApartments,\r\n        clearApartmentSearchResults,\r\n        setLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SiteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SiteState;\r\n"]},"metadata":{},"sourceType":"module"}