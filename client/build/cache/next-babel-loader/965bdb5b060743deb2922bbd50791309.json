{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\nxt_door_deals\\\\site\\\\client\\\\context\\\\auth\\\\AuthState.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport authReducer from \"./authReducer\";\nimport AuthContext from \"./authContext\";\nimport setAuthToken from \"../../utils/setToken\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR, CLEAR_ERROR, CLEAR_MESSAGE, LOGOUT, EMAIL_SEND_SUCCESS, EMAIL_SEND_FAILURE, EMAIL_VERIFICATION_SUCCESS, EMAIL_VERIFICATION_FAIL, EMAIL_FOUND, EMAIL_NOT_FOUND, OTP_GENERATED_SUCCESS, OTP_GENERATED_FAILURE, OTP_VALIDATED_SUCCESS, OTP_VALIDATED_FAILURE, PASSWORD_CHANGE_SUCCESS, PASSWORD_CHANGE_FAILURE, EMAIL_VERIFICATION_TIMESTAMP_UPDATED } from \"../Types\";\nvar cookie = new Cookies(); // Will be used in the copyright section in the email footer\n\nvar currentYear = new Date().getFullYear(); // Email sender\n\nvar fromEmail = process.env.NEXT_PUBLIC_FROM_EMAIL;\n\nvar AuthState = function AuthState(props) {\n  _s();\n\n  var initialState = {\n    token: null,\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    authError: null,\n    emailVerified: null,\n    verificationStatus: null,\n    emailSent: null,\n    otpGenerated: null,\n    otpValidated: null,\n    passwordChanged: null,\n    genericMessage: null\n  };\n\n  var _useReducer = useReducer(authReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Register user\n\n\n  var registerUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, email) {\n      var mobile,\n          password,\n          apartment,\n          jsonPayload,\n          _res,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mobile = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n              password = _args.length > 3 ? _args[3] : undefined;\n              apartment = _args.length > 4 ? _args[4] : undefined;\n              jsonPayload = {\n                name: name,\n                email: email,\n                mobile: mobile,\n                password: password,\n                apartment_id: apartment\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/register/user\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 7:\n              _res = _context.sent;\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: _res.data\n              });\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              dispatch({\n                type: REGISTER_FAIL,\n                payload: _context.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }));\n\n    return function registerUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Load user\n\n\n  var loadUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _res2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (cookie.get(\"nddToken\")) {\n                setAuthToken(cookie.get(\"nddToken\"));\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/auth/current_user\"));\n\n            case 4:\n              _res2 = _context2.sent;\n              dispatch({\n                type: USER_LOADED,\n                payload: _res2.data\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: AUTH_ERROR,\n                payload: _context2.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function loadUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // User login\n\n\n  var loginUser = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, password) {\n      var formData, _res3;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formData = new FormData();\n              formData.set(\"username\", email);\n              formData.set(\"password\", password);\n              _context3.prev = 3;\n              _context3.next = 6;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/auth\"), formData, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              });\n\n            case 6:\n              _res3 = _context3.sent;\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: _res3.data\n              });\n              _context3.next = 14;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              dispatch({\n                type: LOGIN_FAIL,\n                payload: _context3.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10]]);\n    }));\n\n    return function loginUser(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Send email - user registration, welcome etc...\n\n\n  var sendEmail = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(name, email, verificationUrl) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: email,\n                template_name: \"VERIFY_EMAIL_TEMPLATE\",\n                name: name,\n                verificationurl: verificationUrl,\n                year: currentYear\n              };\n              _context4.prev = 2;\n              _context4.next = 5;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/email/send\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              dispatch({\n                type: EMAIL_SEND_SUCCESS\n              });\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](2);\n              dispatch({\n                type: EMAIL_SEND_FAILURE\n              });\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 8]]);\n    }));\n\n    return function sendEmail(_x5, _x6, _x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // Refresh the email verification timestamp\n\n\n  var updateEmailVerificationTimestamp = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              jsonPayload = {\n                id: id\n              };\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/email_timestamp/refresh\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: null\n              });\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: EMAIL_VERIFICATION_TIMESTAMP_UPDATED,\n                payload: _context5.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 7]]);\n    }));\n\n    return function updateEmailVerificationTimestamp(_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // Email the otp to the user during password change\n\n\n  var sendOtpByEmail = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(email) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: email,\n                template_name: \"OTP_EMAIL_TEMPLATE\",\n                year: currentYear\n              };\n              _context6.prev = 2;\n              _context6.next = 5;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/email/send/otp\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              dispatch({\n                type: EMAIL_SEND_SUCCESS\n              });\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](2);\n              dispatch({\n                type: EMAIL_SEND_FAILURE\n              });\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[2, 8]]);\n    }));\n\n    return function sendOtpByEmail(_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // Send the contact us email\n\n\n  var sendContactUsEmail = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(email, message) {\n      var emailBody, jsonPayload, _res4;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setAuthToken(process.env.SENDGRID_API_KEY);\n              emailBody = \"\".concat(email, \" wrote: \\n\\n\").concat(message);\n              jsonPayload = {\n                from_email: fromEmail,\n                to_email: fromEmail,\n                body: emailBody\n              };\n              _context7.prev = 3;\n              _context7.next = 6;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/email/send/contact\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 6:\n              _res4 = _context7.sent;\n              dispatch({\n                type: EMAIL_SEND_SUCCESS,\n                payload: _res4.data\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_MESSAGE\n                });\n              }, 5000);\n              _context7.next = 15;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](3);\n              dispatch({\n                type: EMAIL_SEND_FAILURE,\n                payload: res.data\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_MESSAGE\n                });\n              }, 5000);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 11]]);\n    }));\n\n    return function sendContactUsEmail(_x10, _x11) {\n      return _ref7.apply(this, arguments);\n    };\n  }(); // Complete the user's email verification process\n\n\n  var verifyEmail = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(token) {\n      var utcTime, _res5;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              utcTime = new Date().toJSON();\n              _context8.prev = 1;\n              _context8.next = 4;\n              return axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/user/emailverification/\").concat(token), {\n                timestamp: utcTime\n              }, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              _res5 = _context8.sent;\n              dispatch({\n                type: EMAIL_VERIFICATION_SUCCESS,\n                payload: _res5.data\n              });\n              _context8.next = 11;\n              break;\n\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](1);\n              dispatch({\n                type: EMAIL_VERIFICATION_FAIL,\n                payload: _context8.t0.response.data.detail\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 8]]);\n    }));\n\n    return function verifyEmail(_x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // Method for forgot password - email validation\n\n\n  var validateEmail = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(email) {\n      var _res6;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/user/validate_email/\").concat(email));\n\n            case 3:\n              _res6 = _context9.sent;\n              dispatch({\n                type: EMAIL_FOUND,\n                payload: _res6.data\n              });\n              _context9.next = 11;\n              break;\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              dispatch({\n                type: EMAIL_NOT_FOUND,\n                payload: _context9.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 7]]);\n    }));\n\n    return function validateEmail(_x13) {\n      return _ref9.apply(this, arguments);\n    };\n  }(); // Method for forgot password - otp generation\n\n\n  var generateOtp = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id, email) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              jsonPayload = {\n                id: id,\n                email: email\n              };\n              _context10.prev = 1;\n              _context10.next = 4;\n              return axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/user/otp_generation\"), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: OTP_GENERATED_SUCCESS\n              });\n              _context10.next = 10;\n              break;\n\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](1);\n              dispatch({\n                type: OTP_GENERATED_FAILURE,\n                payload: _context10.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 7]]);\n    }));\n\n    return function generateOtp(_x14, _x15) {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // Method for forgot password - otp generation\n\n\n  var validateOtp = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(id, otp) {\n      var utcTime;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              utcTime = new Date().toJSON();\n              _context11.prev = 1;\n              _context11.next = 4;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/user/verify_otp/\").concat(id, \"?otp=\").concat(otp, \"&timestamp=\").concat(utcTime));\n\n            case 4:\n              dispatch({\n                type: OTP_VALIDATED_SUCCESS\n              });\n              _context11.next = 11;\n              break;\n\n            case 7:\n              _context11.prev = 7;\n              _context11.t0 = _context11[\"catch\"](1);\n              dispatch({\n                type: OTP_VALIDATED_FAILURE,\n                payload: _context11.t0.response.data.detail\n              });\n              setTimeout(function () {\n                return dispatch({\n                  type: CLEAR_ERROR\n                });\n              }, 5000);\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[1, 7]]);\n    }));\n\n    return function validateOtp(_x16, _x17) {\n      return _ref11.apply(this, arguments);\n    };\n  }(); // Method for forgot password - password update\n\n\n  var updatePassword = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(password, userId) {\n      var jsonPayload;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              jsonPayload = {\n                password: password\n              };\n              _context12.prev = 1;\n              _context12.next = 4;\n              return axios.put(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/user/password/\").concat(userId), jsonPayload, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              dispatch({\n                type: PASSWORD_CHANGE_SUCCESS\n              });\n              _context12.next = 10;\n              break;\n\n            case 7:\n              _context12.prev = 7;\n              _context12.t0 = _context12[\"catch\"](1);\n              dispatch({\n                type: PASSWORD_CHANGE_FAILURE,\n                payload: _context12.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 7]]);\n    }));\n\n    return function updatePassword(_x18, _x19) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var logout = function logout() {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      authError: state.authError,\n      emailVerified: state.emailVerified,\n      verificationStatus: state.verificationStatus,\n      emailSent: state.emailSent,\n      otpGenerated: state.otpGenerated,\n      otpValidated: state.otpValidated,\n      passwordChanged: state.passwordChanged,\n      genericMessage: state.genericMessage,\n      registerUser: registerUser,\n      loginUser: loginUser,\n      loadUser: loadUser,\n      sendEmail: sendEmail,\n      sendOtpByEmail: sendOtpByEmail,\n      verifyEmail: verifyEmail,\n      validateEmail: validateEmail,\n      updateEmailVerificationTimestamp: updateEmailVerificationTimestamp,\n      sendContactUsEmail: sendContactUsEmail,\n      generateOtp: generateOtp,\n      validateOtp: validateOtp,\n      updatePassword: updatePassword,\n      logout: logout\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/nxt_door_deals/site/client/context/auth/AuthState.jsx"],"names":["React","useReducer","authReducer","AuthContext","setAuthToken","axios","Cookies","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERROR","CLEAR_ERROR","CLEAR_MESSAGE","LOGOUT","EMAIL_SEND_SUCCESS","EMAIL_SEND_FAILURE","EMAIL_VERIFICATION_SUCCESS","EMAIL_VERIFICATION_FAIL","EMAIL_FOUND","EMAIL_NOT_FOUND","OTP_GENERATED_SUCCESS","OTP_GENERATED_FAILURE","OTP_VALIDATED_SUCCESS","OTP_VALIDATED_FAILURE","PASSWORD_CHANGE_SUCCESS","PASSWORD_CHANGE_FAILURE","EMAIL_VERIFICATION_TIMESTAMP_UPDATED","cookie","currentYear","Date","getFullYear","fromEmail","process","env","NEXT_PUBLIC_FROM_EMAIL","AuthState","props","initialState","token","isAuthenticated","user","loading","authError","emailVerified","verificationStatus","emailSent","otpGenerated","otpValidated","passwordChanged","genericMessage","state","dispatch","registerUser","name","email","mobile","password","apartment","jsonPayload","apartment_id","post","NEXT_PUBLIC_API_PROXY","headers","res","type","payload","data","response","detail","setTimeout","loadUser","get","message","loginUser","formData","FormData","set","sendEmail","verificationUrl","SENDGRID_API_KEY","from_email","to_email","template_name","verificationurl","year","updateEmailVerificationTimestamp","id","put","sendOtpByEmail","sendContactUsEmail","emailBody","body","verifyEmail","utcTime","toJSON","timestamp","validateEmail","generateOtp","validateOtp","otp","updatePassword","userId","logout","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport authReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport setAuthToken from \"../../utils/setToken\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  CLEAR_ERROR,\r\n  CLEAR_MESSAGE,\r\n  LOGOUT,\r\n  EMAIL_SEND_SUCCESS,\r\n  EMAIL_SEND_FAILURE,\r\n  EMAIL_VERIFICATION_SUCCESS,\r\n  EMAIL_VERIFICATION_FAIL,\r\n  EMAIL_FOUND,\r\n  EMAIL_NOT_FOUND,\r\n  OTP_GENERATED_SUCCESS,\r\n  OTP_GENERATED_FAILURE,\r\n  OTP_VALIDATED_SUCCESS,\r\n  OTP_VALIDATED_FAILURE,\r\n  PASSWORD_CHANGE_SUCCESS,\r\n  PASSWORD_CHANGE_FAILURE,\r\n  EMAIL_VERIFICATION_TIMESTAMP_UPDATED,\r\n} from \"../Types\";\r\n\r\nconst cookie = new Cookies();\r\n\r\n// Will be used in the copyright section in the email footer\r\nvar currentYear = new Date().getFullYear();\r\n\r\n// Email sender\r\nconst fromEmail = process.env.NEXT_PUBLIC_FROM_EMAIL;\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    user: null,\r\n    loading: true,\r\n    authError: null,\r\n    emailVerified: null,\r\n    verificationStatus: null,\r\n    emailSent: null,\r\n    otpGenerated: null,\r\n    otpValidated: null,\r\n    passwordChanged: null,\r\n    genericMessage: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Register user\r\n  const registerUser = async (\r\n    name,\r\n    email,\r\n    mobile = null,\r\n    password,\r\n    apartment\r\n  ) => {\r\n    const jsonPayload = {\r\n      name: name,\r\n      email: email,\r\n      mobile: mobile,\r\n      password: password,\r\n      apartment_id: apartment,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/register/user`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.detail });\r\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 5000);\r\n    }\r\n  };\r\n\r\n  // Load user\r\n  const loadUser = async () => {\r\n    if (cookie.get(\"nddToken\")) {\r\n      setAuthToken(cookie.get(\"nddToken\"));\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/auth/current_user`\r\n      );\r\n\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR, payload: err.message });\r\n    }\r\n  };\r\n\r\n  // User login\r\n  const loginUser = async (email, password) => {\r\n    const formData = new FormData();\r\n\r\n    formData.set(\"username\", email);\r\n    formData.set(\"password\", password);\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/auth`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.detail });\r\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 5000);\r\n    }\r\n  };\r\n\r\n  // Send email - user registration, welcome etc...\r\n  const sendEmail = async (name, email, verificationUrl) => {\r\n    setAuthToken(process.env.SENDGRID_API_KEY);\r\n\r\n    const jsonPayload = {\r\n      from_email: fromEmail,\r\n      to_email: email,\r\n      template_name: \"VERIFY_EMAIL_TEMPLATE\",\r\n      name: name,\r\n      verificationurl: verificationUrl,\r\n      year: currentYear,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/email/send`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: EMAIL_SEND_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: EMAIL_SEND_FAILURE });\r\n    }\r\n  };\r\n\r\n  // Refresh the email verification timestamp\r\n  const updateEmailVerificationTimestamp = async (id) => {\r\n    const jsonPayload = { id: id };\r\n\r\n    try {\r\n      await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/email_timestamp/refresh`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({ type: null });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: EMAIL_VERIFICATION_TIMESTAMP_UPDATED,\r\n        payload: err.response.data.detail,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Email the otp to the user during password change\r\n  const sendOtpByEmail = async (email) => {\r\n    setAuthToken(process.env.SENDGRID_API_KEY);\r\n\r\n    const jsonPayload = {\r\n      from_email: fromEmail,\r\n      to_email: email,\r\n      template_name: \"OTP_EMAIL_TEMPLATE\",\r\n      year: currentYear,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/email/send/otp`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: EMAIL_SEND_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: EMAIL_SEND_FAILURE });\r\n    }\r\n  };\r\n\r\n  // Send the contact us email\r\n  const sendContactUsEmail = async (email, message) => {\r\n    setAuthToken(process.env.SENDGRID_API_KEY);\r\n\r\n    var emailBody = `${email} wrote: \\n\\n${message}`;\r\n\r\n    const jsonPayload = {\r\n      from_email: fromEmail,\r\n      to_email: fromEmail,\r\n      body: emailBody,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/email/send/contact`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({ type: EMAIL_SEND_SUCCESS, payload: res.data });\r\n      setTimeout(() => dispatch({ type: CLEAR_MESSAGE }), 5000);\r\n    } catch (error) {\r\n      dispatch({ type: EMAIL_SEND_FAILURE, payload: res.data });\r\n      setTimeout(() => dispatch({ type: CLEAR_MESSAGE }), 5000);\r\n    }\r\n  };\r\n\r\n  // Complete the user's email verification process\r\n  const verifyEmail = async (token) => {\r\n    const utcTime = new Date().toJSON();\r\n    try {\r\n      const res = await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/user/emailverification/${token}`,\r\n        {\r\n          timestamp: utcTime,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({ type: EMAIL_VERIFICATION_SUCCESS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: EMAIL_VERIFICATION_FAIL,\r\n        payload: err.response.data.detail,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Method for forgot password - email validation\r\n  const validateEmail = async (email) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/user/validate_email/${email}`\r\n      );\r\n\r\n      dispatch({ type: EMAIL_FOUND, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: EMAIL_NOT_FOUND, payload: err.response.data.detail });\r\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 5000);\r\n    }\r\n  };\r\n\r\n  // Method for forgot password - otp generation\r\n  const generateOtp = async (id, email) => {\r\n    const jsonPayload = {\r\n      id: id,\r\n      email: email,\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/user/otp_generation`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: OTP_GENERATED_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: OTP_GENERATED_FAILURE,\r\n        payload: err.response.data.detail,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Method for forgot password - otp generation\r\n  const validateOtp = async (id, otp) => {\r\n    const utcTime = new Date().toJSON();\r\n    try {\r\n      await axios.get(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/user/verify_otp/${id}?otp=${otp}&timestamp=${utcTime}`\r\n      );\r\n\r\n      dispatch({ type: OTP_VALIDATED_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: OTP_VALIDATED_FAILURE,\r\n        payload: err.response.data.detail,\r\n      });\r\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 5000);\r\n    }\r\n  };\r\n\r\n  // Method for forgot password - password update\r\n  const updatePassword = async (password, userId) => {\r\n    const jsonPayload = {\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `${process.env.NEXT_PUBLIC_API_PROXY}/user/password/${userId}`,\r\n        jsonPayload,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({ type: PASSWORD_CHANGE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_CHANGE_FAILURE,\r\n        payload: err.response.data.detail,\r\n      });\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        authError: state.authError,\r\n        emailVerified: state.emailVerified,\r\n        verificationStatus: state.verificationStatus,\r\n        emailSent: state.emailSent,\r\n        otpGenerated: state.otpGenerated,\r\n        otpValidated: state.otpValidated,\r\n        passwordChanged: state.passwordChanged,\r\n        genericMessage: state.genericMessage,\r\n        registerUser,\r\n        loginUser,\r\n        loadUser,\r\n        sendEmail,\r\n        sendOtpByEmail,\r\n        verifyEmail,\r\n        validateEmail,\r\n        updateEmailVerificationTimestamp,\r\n        sendContactUsEmail,\r\n        generateOtp,\r\n        validateOtp,\r\n        updatePassword,\r\n        logout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}