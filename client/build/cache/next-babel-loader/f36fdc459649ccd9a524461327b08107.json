{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from \"../../../context/auth/authContext\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faEye, faEyeSlash, faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // Component imports\n\nimport PasswordChangeSuccess from \"./PasswordChangeSuccess\";\nvar passwordValidationSchema = Yup.object({\n  password: Yup.string().required(\"Please enter a password\").min(8, \"Your password should have at least 8 characters\").trim(),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").trim()\n});\n\nvar ChangePassword = function ChangePassword(props) {\n  var _useState = useState(false),\n      displayPassword = _useState[0],\n      setDisplayPassword = _useState[1];\n\n  var _useState2 = useState(false),\n      displayConfirmPassword = _useState2[0],\n      setDisplayConfirmPassword = _useState2[1];\n\n  var _useState3 = useState(true),\n      showForm = _useState3[0],\n      setShowForm = _useState3[1];\n\n  var authContext = useContext(AuthContext);\n  var passwordChanged = authContext.passwordChanged,\n      updatePassword = authContext.updatePassword;\n  useEffect(function () {\n    if (passwordChanged) {\n      setShowForm(false);\n    }\n  }, [passwordChanged]);\n\n  var setPasswordDisplay = function setPasswordDisplay() {\n    setDisplayPassword(!displayPassword);\n  };\n\n  var setConfirmPasswordDisplay = function setConfirmPasswordDisplay() {\n    setDisplayConfirmPassword(!displayConfirmPassword);\n  };\n\n  return __jsx(AnimatePresence, {\n    exitBeforeEnter: true\n  }, showForm ? __jsx(motion.div, {\n    key: \"form3\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 0.3\n      }\n    }\n  }, __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"img\", {\n    src: \"/images/forgotpassword/password.svg\",\n    alt: \"Update password\",\n    height: \"200px\",\n    width: \"200px\"\n  })), __jsx(\"div\", {\n    className: \"text-center mt-6 pl-2 pr-2\"\n  }, __jsx(\"p\", {\n    className: \"text-gray-600\"\n  }, \"Time to think of a new super secret password.\")), __jsx(\"div\", {\n    className: \"text-center mt-6\"\n  }, __jsx(\"h2\", {\n    className: \"font-semibold text-brand-gray text-xl mb-4\"\n  }, \"Enter your new password\")), __jsx(\"div\", {\n    className: \"mt-3 w-full pl-2 pr-2\"\n  }, __jsx(Formik, {\n    initialValues: {\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: passwordValidationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      updatePassword(values.password, props.user.id);\n      setSubmitting(false);\n    }\n  }, function (props) {\n    return __jsx(Form, null, __jsx(\"div\", {\n      className: \"\\\"flex items-center justify-center border-2 rounded-md \\\" \".concat(props.touched.password && props.errors.password ? \"mb-1 border-red-800\" : \"mb-6 border-gray-300\")\n    }, __jsx(FontAwesomeIcon, {\n      icon: faLock,\n      className: \"inline align-middle fill-current text-gray-600 text-lg opacity-50 ml-4\"\n    }), __jsx(Field, {\n      id: \"password\",\n      name: \"password\",\n      type: !displayPassword ? \"password\" : \"text\",\n      placeholder: \"Password*\",\n      maxLength: \"50\",\n      autoComplete: \"off\",\n      autoFocus: \"\",\n      className: \"textbox-input w-10/12 placeholder-purple-900 placeholder-opacity-50\"\n    }), __jsx(FontAwesomeIcon, {\n      icon: !displayPassword ? faEye : faEyeSlash,\n      className: \"text-sm align-middle top-0 right-0 opacity-50 cursor-pointer\",\n      onClick: setPasswordDisplay,\n      \"aria-label\": !displayPassword ? \"Show Password\" : \"Hide Password\"\n    })), props.touched.password && props.errors.password ? __jsx(\"div\", {\n      className: \"font-axiforma text-xs text-red-800 p-1 mb-2\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faExclamationTriangle\n    }), \" \", props.errors.password) : null, __jsx(\"div\", {\n      className: \"\\\"flex items-center justify-center border-2 rounded-md \\\" \".concat(props.touched.confirmPassword && props.errors.confirmPassword ? \"mb-1 border-red-800\" : \"mb-6 border-gray-300\")\n    }, __jsx(FontAwesomeIcon, {\n      icon: faLock,\n      className: \"inline align-middle fill-current text-gray-600 text-lg opacity-50 ml-4\"\n    }), __jsx(Field, {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: !displayConfirmPassword ? \"password\" : \"text\",\n      placeholder: \"Confirm Password*\",\n      maxLength: \"50\",\n      autoComplete: \"off\",\n      autoFocus: \"\",\n      className: \"textbox-input w-10/12 placeholder-purple-900 placeholder-opacity-50\"\n    }), __jsx(FontAwesomeIcon, {\n      icon: !displayConfirmPassword ? faEye : faEyeSlash,\n      className: \"text-sm align-middle top-0 right-0 opacity-50 cursor-pointer\",\n      onClick: setConfirmPasswordDisplay,\n      \"aria-label\": !displayConfirmPassword ? \"Show Password\" : \"Hide Password\"\n    })), props.touched.confirmPassword && props.errors.confirmPassword ? __jsx(\"div\", {\n      className: \"font-axiforma text-xs text-red-800 p-1 mb-2\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: faExclamationTriangle\n    }), \" \", props.errors.confirmPassword) : null, __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(motion.button, {\n      type: \"submit\",\n      className: \"w-48 h-12 bg-purple-500 text-white  font-bold rounded-md uppercase tracking-wide focus:outline-none\",\n      whileTap: {\n        backgroundColor: \"#D6BCFA\",\n        color: \"#550052\",\n        y: \"5px\",\n        boxShadow: \"0px 8px 15px rgba(270, 90, 56, 0.15)\"\n      }\n    }, \"Update Password\")));\n  }))) : __jsx(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.3\n    },\n    className: \"flex justify-center items-center min-h-screen\"\n  }, __jsx(PasswordChangeSuccess, null)));\n};\n\nexport default ChangePassword;","map":null,"metadata":{},"sourceType":"module"}