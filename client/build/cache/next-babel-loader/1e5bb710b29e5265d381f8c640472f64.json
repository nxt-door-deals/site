{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from \"../../../context/auth/authContext\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // Component Import\n\nimport Alert from \"../../utils/Alert\";\nimport ChangePassword from \"./ChangePassword\";\nvar otpValidationSchema = Yup.object({\n  otp1: Yup.string().required(),\n  otp2: Yup.string().required(),\n  otp3: Yup.string().required(),\n  otp4: Yup.string().required(),\n  otp5: Yup.string().required(),\n  otp6: Yup.string().required()\n});\n\nvar OtpForm = function OtpForm(props) {\n  var authContext = useContext(AuthContext);\n\n  var _useState = useState(true),\n      showForm = _useState[0],\n      setShowForm = _useState[1];\n\n  var validateOtp = authContext.validateOtp,\n      authError = authContext.authError,\n      otpValidated = authContext.otpValidated;\n  useEffect(function () {\n    if (otpValidated) {\n      setShowForm(false);\n    }\n  }, [otpValidated]);\n  return __jsx(AnimatePresence, {\n    exitBeforeEnter: true,\n    initial: false\n  }, showForm ? __jsx(motion.div, {\n    key: \"form2\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 0.3\n      }\n    }\n  }, __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, __jsx(\"img\", {\n    src: \"/images/forgotpassword/otp.svg\",\n    alt: \"Otp sent\",\n    height: \"200px\",\n    width: \"200px\"\n  })), __jsx(\"div\", {\n    className: \"text-center mt-6 pl-4 pr-4\"\n  }, __jsx(\"p\", {\n    className: \"text-gray-600\"\n  }, \"We have sent a one-time password (OTP) to your email id,\", \" \", __jsx(\"span\", {\n    className: \"font-bold text-purple-600\"\n  }, props.user.email), \". Please enter the six-character OTP below. The OTP is valid for\", \" \", __jsx(\"span\", {\n    className: \"font-semibold\"\n  }, \"10 minutes only\"), \".\", \" \")), __jsx(\"div\", {\n    className: \"text-center mt-6\"\n  }, __jsx(\"h2\", {\n    className: \"font-semibold text-brand-gray text-xl mb-4\"\n  }, \"Enter the OTP\")), __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full\"\n  }, __jsx(Alert, {\n    authError: authError,\n    alertTheme: props.alertTheme\n  })), __jsx(\"div\", {\n    className: \"mt-3 w-full\"\n  }, __jsx(Formik, {\n    initialValues: {\n      otp1: \"\",\n      otp2: \"\",\n      otp3: \"\",\n      otp4: \"\",\n      otp5: \"\",\n      otp6: \"\"\n    },\n    validationSchema: otpValidationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      validateOtp(props.user.id, values.otp1 + values.otp2 + values.otp3 + values.otp4 + values.otp5 + values.otp6);\n      setSubmitting(false);\n    }\n  }, function (props) {\n    return __jsx(Form, null, __jsx(\"div\", {\n      className: \"flex justify-center mb-4\"\n    }, __jsx(Field, {\n      id: \"otp1\",\n      name: \"otp1\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp1 && props.errors.otp1 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    }), __jsx(Field, {\n      id: \"otp2\",\n      name: \"otp2\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp2 && props.errors.otp2 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    }), __jsx(Field, {\n      id: \"otp3\",\n      name: \"otp3\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp3 && props.errors.otp3 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    }), __jsx(Field, {\n      id: \"otp4\",\n      name: \"otp4\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp4 && props.errors.otp4 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    }), __jsx(Field, {\n      id: \"otp5\",\n      name: \"otp5\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp5 && props.errors.otp5 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    }), __jsx(Field, {\n      id: \"otp6\",\n      name: \"otp6\",\n      type: \"text\",\n      placeholder: \"\",\n      maxLength: \"1\",\n      className: props.touched.otp6 && props.errors.otp6 ? \"border-red-800 otp-text\" : \"border-gray-300 otp-text\"\n    })), __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(motion.button, {\n      type: \"submit\",\n      className: \"w-48 h-12 bg-purple-500 text-white  font-bold rounded-md uppercase tracking-wide focus:outline-none\",\n      whileTap: {\n        backgroundColor: \"#D6BCFA\",\n        color: \"#550052\",\n        y: \"5px\",\n        boxShadow: \"0px 8px 15px rgba(270, 90, 56, 0.15)\"\n      }\n    }, \"Validate OTP\")));\n  }))) : __jsx(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.3\n    },\n    className: \"flex justify-center items-center min-h-screen\"\n  }, __jsx(ChangePassword, {\n    user: props.user\n  })));\n};\n\nexport default OtpForm;","map":null,"metadata":{},"sourceType":"module"}