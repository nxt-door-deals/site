{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport siteReducer from \"./siteReducer\";\nimport SiteContext from \"./siteContext\";\nimport axios from \"axios\";\nimport { FETCH_APARTMENT, FETCH_APARTMENT_ERROR, LOADING, CLEAR_APARTMENT_SEARCH_RESULTS } from \"../Types\";\n\nvar SiteState = function SiteState(props) {\n  var initialState = {\n    numApartmentsFetched: \"\",\n    fetchError: null,\n    loading: false,\n    apartmentData: \"\"\n  };\n\n  var _useReducer = useReducer(siteReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var fetchApartments = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(aptName) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_API_PROXY, \"/apartments/search/?name=\").concat(aptName));\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: FETCH_APARTMENT,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: FETCH_APARTMENT_ERROR,\n                payload: _context.t0.response.data.detail\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fetchApartments(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var clearApartmentSearchResults = function clearApartmentSearchResults() {\n    dispatch({\n      type: CLEAR_APARTMENT_SEARCH_RESULTS\n    });\n  };\n\n  var setLoading = function setLoading() {\n    dispatch({\n      type: LOADING\n    });\n  };\n\n  return __jsx(SiteContext.Provider, {\n    value: {\n      numApartmentsFetched: state.numApartmentsFetched,\n      loading: state.loading,\n      apartmentData: state.apartmentData,\n      fetchError: state.fetchError,\n      fetchApartments: fetchApartments,\n      clearApartmentSearchResults: clearApartmentSearchResults,\n      setLoading: setLoading\n    }\n  }, props.children);\n};\n\nexport default SiteState;","map":null,"metadata":{},"sourceType":"module"}